var documenterSearchIndex = {"docs":
[{"location":"api/#DocstringTranslation.jl-Documentation","page":"API","title":"DocstringTranslation.jl Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#DocstringTranslation.cache_original-Tuple{Markdown.MD}","page":"API","title":"DocstringTranslation.cache_original","text":"cache_original(md::Markdown.MD)\n\nCache the original version of a Markdown document.\n\nArguments\n\nmd::Markdown.MD: The Markdown document to cache\n\nDetails\n\nCreates a cache directory if it doesn't exist and saves the original Markdown content to 'original.md' within that directory.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.cache_translation-Tuple{String, Markdown.MD}","page":"API","title":"DocstringTranslation.cache_translation","text":"cache_translation(md_hash_original::String, transmd::Markdown.MD)\n\nCache a translated version of a Markdown document.\n\nArguments\n\nmd_hash_original::String: The hash of the original Markdown document\ntransmd::Markdown.MD: The translated Markdown document to cache\n\nDetails\n\nCreates a cache directory if it doesn't exist and saves the translated content to a language-specific file (e.g., 'ja.md' for Japanese) within that directory.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.insertversion-Tuple{AbstractVector, VersionNumber}","page":"API","title":"DocstringTranslation.insertversion","text":"insertversion(svec::AbstractVector, v::VersionNumber)\n\nInsert a version string into a copy of the given vector at the second position.\n\nArguments\n\nsvec::AbstractVector: The vector into which the version string will be inserted.\nv::VersionNumber: The version number used to create the version string.\n\nReturns\n\nA new vector with the version string inserted at the second position.\n\nDetails\n\nThe function creates a deep copy of the input vector svec and inserts a string representation of the version number v in the format \"major.minor\" at the second position.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.istranslated-Tuple{Markdown.MD}","page":"API","title":"DocstringTranslation.istranslated","text":"istranslated(md::Markdown.MD)\n\nCheck if a translation exists for the given Markdown document.\n\nArguments\n\nmd::Markdown.MD: The Markdown document to check for translation\n\nReturns\n\ntrue if a translation file exists in the cache directory for the current language, false otherwise.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.load_translation-Tuple{Markdown.MD}","page":"API","title":"DocstringTranslation.load_translation","text":"load_translation(md::Markdown.MD)\n\nLoad the cached translation for a given Markdown document.\n\nArguments\n\nmd::Markdown.MD: The Markdown document to load the translation for\n\nReturns\n\nA new Markdown.MD object containing the translated content.\n\nDetails\n\nLoads the translation file from cache, post-processes it, and parses it as Markdown.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.pathofcachedir","page":"API","title":"DocstringTranslation.pathofcachedir","text":"pathofcachedir(md::Markdown.MD, allowold::Bool = false)\n\nGet the cache directory path for a given Markdown document.\n\nArguments\n\nmd::Markdown.MD: The Markdown document to get the cache path for\nallowold::Bool = false: If true, allows falling back to previous minor version's cache directory\n\nReturns\n\nA string containing the full path to the cache directory.\n\nDetails\n\nThe cache directory path is constructed based on either:\n\nThe module path from md.meta[:module] if present, using the module's version or VERSION\nThe file path from md.meta[:path] if present, using VERSION\n\nIf allowold is true and the target directory doesn't exist, falls back to the previous minor version's directory.\n\nThrows\n\nArgumentError: If neither :module nor :path is found in the markdown metadata\n\n\n\n\n\n","category":"function"},{"location":"api/#DocstringTranslation.prevminor-Tuple{VersionNumber}","page":"API","title":"DocstringTranslation.prevminor","text":"prevminor(v::VersionNumber)\n\nReturn a VersionNumber with the same major version as v, but with minor version decremented by 1 (bounded at 0) and patch version set to 0.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.translate_md!-Tuple{Markdown.MD}","page":"API","title":"DocstringTranslation.translate_md!","text":"translate_md!(md::Markdown.MD)\n\nTranslate a Markdown document in-place using OpenAI translation.\n\nArguments\n\nmd::Markdown.MD: The Markdown document to translate\n\nReturns\n\nThe translated Markdown document (same object as input)\n\nDetails\n\nRecursively translates all content in the Markdown document using multiple threads. Translation is done in-place, modifying the original document.\n\n\n\n\n\n","category":"method"},{"location":"api/#DocstringTranslation.@switchlang!-Tuple{Any}","page":"API","title":"DocstringTranslation.@switchlang!","text":"@switchlang!(lang)\n\nSwitch the target language for docstring translation and modify the documentation system to automatically translate docstrings.\n\nArguments\n\nlang: The target language code (e.g., \"ja\", \"en\") to translate docstrings into.\n\nDetails\n\nThis macro performs the following operations:\n\nSets the target language for translation\nOverrides Docs.parsedoc to insert translation engine for individual docstrings\nOverrides Documenter.Page constructor to enable translation of entire documentation pages\n\nExample\n\n@switchlang! \"ja\"  # Switch to Japanese translation\n\n\n\n\n\n","category":"macro"},{"location":"caching/#キャッシュ機構","page":"Caching translated docstrings","title":"キャッシュ機構","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"DocstringTranslation.jl は、翻訳結果をキャッシュすることで、API の使用量を抑え、ドキュメント生成の効率を向上させています。","category":"page"},{"location":"caching/#キャッシュの仕組み","page":"Caching translated docstrings","title":"キャッシュの仕組み","text":"","category":"section"},{"location":"caching/#キャッシュディレクトリ","page":"Caching translated docstrings","title":"キャッシュディレクトリ","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"キャッシュは以下の場所に保存されます：","category":"page"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"デフォルト: @get_scratch!(\"translation\") で指定されるディレクトリ\nカスタム: switchtranslationcachedir! 関数で指定したディレクトリ","category":"page"},{"location":"caching/#キャッシュの構造","page":"Caching translated docstrings","title":"キャッシュの構造","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"キャッシュは以下のような構造で保存されます：","category":"page"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"cache_directory/\n├── original/          # 元のドキュメント\n│   └── {hash}.json\n└── translations/      # 翻訳済みドキュメント\n    └── {hash}_{lang}.json","category":"page"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"{hash}: ドキュメントの内容から生成される SHA-256 ハッシュ\n{lang}: 翻訳先の言語コード（例：ja, en）","category":"page"},{"location":"caching/#キャッシュの動作","page":"Caching translated docstrings","title":"キャッシュの動作","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"キャッシュの確認\nドキュメント生成時に、まず元のドキュメントのハッシュを計算\n対応する翻訳済みドキュメントがキャッシュに存在するか確認\nキャッシュの利用\nキャッシュに存在する場合：キャッシュから翻訳を読み込み\nキャッシュに存在しない場合：OpenAI API を使用して翻訳を実行\nキャッシュの保存\n新しい翻訳が生成された場合、キャッシュに保存\n元のドキュメントも同時に保存（将来の比較用）","category":"page"},{"location":"caching/#キャッシュの利点","page":"Caching translated docstrings","title":"キャッシュの利点","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"API 使用量の削減\n同じドキュメントの再翻訳を避けることで、API の使用量を最小限に抑制\n生成速度の向上\nキャッシュからの読み込みは API 呼び出しよりも高速\n特に大規模なドキュメント生成時に効果的\n一貫性の確保\n同じドキュメントに対して常に同じ翻訳を提供\n翻訳の品質と一貫性を維持","category":"page"},{"location":"caching/#キャッシュの管理","page":"Caching translated docstrings","title":"キャッシュの管理","text":"","category":"section"},{"location":"caching/#キャッシュのクリア","page":"Caching translated docstrings","title":"キャッシュのクリア","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"キャッシュディレクトリを直接削除することで、キャッシュをクリアできます：","category":"page"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"# キャッシュディレクトリのパスを取得\ncache_dir = DocstringTranslation.TRANSLATION_CACHE_DIR[]\n\n# キャッシュをクリア（必要な場合）\nrm(cache_dir, force=true, recursive=true)","category":"page"},{"location":"caching/#キャッシュの移動","page":"Caching translated docstrings","title":"キャッシュの移動","text":"","category":"section"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"キャッシュディレクトリを変更する場合：","category":"page"},{"location":"caching/","page":"Caching translated docstrings","title":"Caching translated docstrings","text":"# 新しいキャッシュディレクトリを設定\nswitchtranslationcachedir!(\"path/to/new/cache/directory\")","category":"page"},{"location":"#DocstringTranslation.jl","page":"Home","title":"DocstringTranslation.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DocstringTranslation.jl は、Julia のドキュメント（docstring）を自動的に翻訳するためのパッケージです。OpenAI API を利用して、ドキュメントの多言語化を支援します。 翻訳の品質は OpenAI API の性能に依存します．","category":"page"},{"location":"","page":"Home","title":"Home","text":"(English follows Japanese)","category":"page"},{"location":"#主な機能","page":"Home","title":"主な機能","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ドキュメント文字列の自動翻訳\n翻訳結果のキャッシュ機能\nDocumenter.jl との統合","category":"page"},{"location":"#インストール","page":"Home","title":"インストール","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"DocstringTranslation\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"OpenAI API キーの設定が必要です．環境変数 OPENAI_API_KEY を設定してください．必要に応じて OpenAI.jl の README も参考になるでしょう.","category":"page"},{"location":"","page":"Home","title":"Home","text":"DotEnv.jl パッケージを使用することで OPENAI_API_KEY を陽に設定することを避けることができます． 作業ディレクトリに .env ファイルを配置し，そのファイルに OpenAI API キーを設定します．","category":"page"},{"location":"","page":"Home","title":"Home","text":"# .env\nOPENAI_API_KEY=sk-<ほにゃらら>","category":"page"},{"location":"","page":"Home","title":"Home","text":"REPL を開いて下記を実行することで自動的に ENV[\"OPENAI_API_KEY\"] を設定することができます：","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using DotEnv; DotEnv.load!()","category":"page"},{"location":"","page":"Home","title":"Home","text":"実際に ENV[\"OPENAI_API_KEY\"] が設定されていることを間接的に確認しましょう：","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @assert haskey(ENV, \"OPENAI_API_KEY\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"以上で準備は完了です．","category":"page"},{"location":"#基本的な使い方","page":"Home","title":"基本的な使い方","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"指数関数 e^x を計算する関数 exp に対応する docstring を日本語で表示してみましょう．ワンライナーで実行できます．","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using DotEnv; DotEnv.load!(); using DocstringTranslation; @switchlang! \"ja\"; @doc exp\n  exp(x)\n\n  xの自然基底指数を計算します。言い換えれば、ℯ^xです。\n\n  他にexp2、exp10、およびcisも参照してください。\n\n  例\n  ≡≡\n\n  julia> exp(1.0)\n  2.718281828459045\n\n  julia> exp(im * pi) ≈ cis(pi)\n  true\n\n  exp(A::AbstractMatrix)\n\n  行列 A の行列指数関数を計算します。これは次のように定義されます。\n\n  e^A = \\sum_{n=0}^{\\infty} \\frac{A^n}{n!}.\n\n  対称行列またはエルミート行列 A\n  の場合は、固有分解（eigen）が使用され、それ以外の場合はスケーリングと平方化アルゴリズムが選択されます（詳細は\n  [^H05] を参照）。\n\n  │ [^H05]\n  │\n  │  Nicholas J. Higham, \"The squaring and scaling method for the matrix exponential\n  │  revisited\", SIAM Journal on Matrix Analysis and Applications, 26(4), 2005, 1179-1193.\n  │  doi:10.1137/090768539 (https://doi.org/10.1137/090768539)\n\n  例\n  ≡≡\n\n  julia> A = Matrix(1.0I, 2, 2)\n  2×2 Matrix{Float64}:\n   1.0  0.0\n   0.0  1.0\n\n  julia> exp(A)\n  2×2 Matrix{Float64}:\n   2.71828  0.0\n   0.0      2.71828","category":"page"},{"location":"","page":"Home","title":"Home","text":"@doc exp の代わりにヘルプモードに移行し help?> exp を実行しても構いません．","category":"page"},{"location":"#設定","page":"Home","title":"設定","text":"","category":"section"},{"location":"#翻訳先の言語設定","page":"Home","title":"翻訳先の言語設定","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"@switchlang! lang のようにマクロを使用して翻訳先の言語を設定します：","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @switchlang! \"ja\"  # 日本語に翻訳\njulia> @switchlang! \"de\"  # ドイツ語に翻訳","category":"page"},{"location":"","page":"Home","title":"Home","text":"ここで， \"ja\" は ISO 639-1 に登録されている日本語に対応する言語コードです．値 lang は OpenAI API が提供するシステムプロンプトに渡されます． したがって，ChatGPT が lang の意味を適切に解釈できる限り，ユーザはこの値を自由に選択することができます．","category":"page"},{"location":"#キャッシュディレクトリの設定","page":"Home","title":"キャッシュディレクトリの設定","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"REPL のセッションを起動する度に OpenAI API 毎回呼び出すことを避けるために，DocstringTranslation パッケージは 翻訳結果をキャッシュする機能を実装しています．この機能は Scratch.jl パッケージ によって実現されています．デフォルトでは joinpath(DEPOT_PATH[1], \"scratchspaces\", \"d404e13b-1f8e-41a5-a26a-0b758a0c6c97\", \"translation\") 以下に格納されます． 要するに ~/.julia/scratchspaces/d404e13b-1f8e-41a5-a26a-0b758a0c6c97/translation のことです．d404e13b-1f8e-41a5-a26a-0b758a0c6c97 は我々のパッケージ DocstringTranslation の UUID を指しています． tree コマンドでディレクトリの構造を調べてみましょう：","category":"page"},{"location":"","page":"Home","title":"Home","text":"$ tree ~/.julia/scratchspaces/d404e13b-1f8e-41a5-a26a-0b758a0c6c97/translation\n├── Base\n│   └── 1.11\n│       └── Math\n│           └── 77be4ada26c623c913ebbdae5d8450a4dfe8f3cbf67837faac9d7193342d2bfe\n│               ├── ja.md\n│               └── original.md\n└── LinearAlgebra\n    └── 1.11\n        └── 46c0494a8a2adffc6f71752b60448da1743997b5b1791b71e3830113e9b9cc46\n            ├── ja.md\n            └── original.md\n\n8 directories, 4 files","category":"page"},{"location":"","page":"Home","title":"Home","text":"@doc exp を実行することで Julia は exp に関する docstring を収集します．先ほどのデモンストレーションでは exp(x) と exp(A::AbstractMatrix) に対する２種類の docstring を収集していました．各は Math v1.11, LinearAlgebra v1.11 モジュール内で定義されているのでこのようなディレクトリ構造が生まれます． 77be4ada26c623c913ebbdae5d8450a4dfe8f3cbf67837faac9d7193342d2bfe や 46c0494a8a2adffc6f71752b60448da1743997b5b1791b71e3830113e9b9cc46 などは原文 (original.md に格納されている格納する) のハッシュ値です．original.md は手動で変更しないでください．翻訳結果に不満があれば ja.md を編集することで所望の翻訳結果を得ることができます．","category":"page"},{"location":"","page":"Home","title":"Home","text":"翻訳結果のキャッシュディレクトリを変更する場合は、以下の関数を使用します：","category":"page"},{"location":"","page":"Home","title":"Home","text":"switchtranslationcachedir!(\"path/to/cache/directory\")","category":"page"},{"location":"#ターゲットパッケージの設定","page":"Home","title":"ターゲットパッケージの設定","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"翻訳対象のパッケージを設定する場合は、以下の関数を使用します：","category":"page"},{"location":"","page":"Home","title":"Home","text":"switchtargetpackage!(\"PackageName\")","category":"page"},{"location":"#動作の仕組み","page":"Home","title":"動作の仕組み","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"@switchlang! マクロが実行されると、以下の処理が行われます：\n翻訳先の言語が設定される\nDocs.parsedoc がオーバーライドされ、翻訳エンジンが挿入される\nDocumenter.Page コンストラクタがオーバーライドされ、ドキュメントページ全体の翻訳が可能になる\nドキュメント生成時に：\n各ドキュメント文字列が翻訳される\n翻訳結果はキャッシュされ、次回以降の生成時に再利用される","category":"page"},{"location":"#注意事項","page":"Home","title":"注意事項","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"翻訳の品質は OpenAI API の性能に依存します","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#DocstringTranslation.jl-2","page":"Home","title":"DocstringTranslation.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DocstringTranslation.jl is a package for automatically translating Julia documentation (docstrings). It uses the OpenAI API to support multilingual documentation. The translation quality depends on the performance of the OpenAI API.","category":"page"},{"location":"#Main-Features","page":"Home","title":"Main Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Automatic translation of documentation strings\nTranslation result caching\nIntegration with Documenter.jl","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"DocstringTranslation\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"You need to set up your OpenAI API key. Set the environment variable OPENAI_API_KEY. You may also find the OpenAI.jl README helpful.","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can avoid explicitly setting OPENAI_API_KEY by using the DotEnv.jl package. Place a .env file in your working directory and set your OpenAI API key in that file:","category":"page"},{"location":"","page":"Home","title":"Home","text":"# .env\nOPENAI_API_KEY=sk-<your-key-here>","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can automatically set ENV[\"OPENAI_API_KEY\"] by opening the REPL and running:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using DotEnv; DotEnv.load!()","category":"page"},{"location":"","page":"Home","title":"Home","text":"Let's indirectly verify that ENV[\"OPENAI_API_KEY\"] is set:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @assert haskey(ENV, \"OPENAI_API_KEY\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"That completes the setup.","category":"page"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let's display the docstring for the exp function, which calculates the exponential function e^x, in Japanese. You can do this in one line:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using DotEnv; DotEnv.load!(); using DocstringTranslation; @switchlang! \"ja\"; @doc exp\n  exp(x)\n\n  xの自然基底指数を計算します。言い換えれば、ℯ^xです。\n\n  他にexp2、exp10、およびcisも参照してください。\n\n  例\n  ≡≡\n\n  julia> exp(1.0)\n  2.718281828459045\n\n  julia> exp(im * pi) ≈ cis(pi)\n  true\n\n  exp(A::AbstractMatrix)\n\n  行列 A の行列指数関数を計算します。これは次のように定義されます。\n\n  e^A = \\sum_{n=0}^{\\infty} \\frac{A^n}{n!}.\n\n  対称行列またはエルミート行列 A\n  の場合は、固有分解（eigen）が使用され、それ以外の場合はスケーリングと平方化アルゴリズムが選択されます（詳細は\n  [^H05] を参照）。\n\n  │ [^H05]\n  │\n  │  Nicholas J. Higham, \"The squaring and scaling method for the matrix exponential\n  │  revisited\", SIAM Journal on Matrix Analysis and Applications, 26(4), 2005, 1179-1193.\n  │  doi:10.1137/090768539 (https://doi.org/10.1137/090768539)\n\n  例\n  ≡≡\n\n  julia> A = Matrix(1.0I, 2, 2)\n  2×2 Matrix{Float64}:\n   1.0  0.0\n   0.0  1.0\n\n  julia> exp(A)\n  2×2 Matrix{Float64}:\n   2.71828  0.0\n   0.0      2.71828","category":"page"},{"location":"","page":"Home","title":"Home","text":"Instead of @doc exp, you can also enter help mode and run help?> exp.","category":"page"},{"location":"#Configuration","page":"Home","title":"Configuration","text":"","category":"section"},{"location":"#Target-Language-Setting","page":"Home","title":"Target Language Setting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Use the macro @switchlang! lang to set the target language:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> @switchlang! \"ja\"  # Translate to Japanese\njulia> @switchlang! \"de\"  # Translate to German","category":"page"},{"location":"","page":"Home","title":"Home","text":"Here, \"ja\" is the language code for Japanese registered in ISO 639-1. The value lang is passed to the system prompt provided by the OpenAI API. Therefore, as long as ChatGPT can appropriately interpret the meaning of lang, users can freely choose this value.","category":"page"},{"location":"#Cache-Directory-Setting","page":"Home","title":"Cache Directory Setting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To avoid calling the OpenAI API every time you start a REPL session, the DocstringTranslation package implements a caching feature for translation results. This feature is implemented using the Scratch.jl package. By default, it is stored under joinpath(DEPOT_PATH[1], \"scratchspaces\", \"d404e13b-1f8e-41a5-a26a-0b758a0c6c97\", \"translation\"). In other words, ~/.julia/scratchspaces/d404e13b-1f8e-41a5-a26a-0b758a0c6c97/translation. The UUID d404e13b-1f8e-41a5-a26a-0b758a0c6c97 refers to our package DocstringTranslation. Let's examine the directory structure using the tree command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"$ tree ~/.julia/scratchspaces/d404e13b-1f8e-41a5-a26a-0b758a0c6c97/translation\n├── Base\n│   └── 1.11\n│       └── Math\n│           └── 77be4ada26c623c913ebbdae5d8450a4dfe8f3cbf67837faac9d7193342d2bfe\n│               ├── ja.md\n│               └── original.md\n└── LinearAlgebra\n    └── 1.11\n        └── 46c0494a8a2adffc6f71752b60448da1743997b5b1791b71e3830113e9b9cc46\n            ├── ja.md\n            └── original.md\n\n8 directories, 4 files","category":"page"},{"location":"","page":"Home","title":"Home","text":"When you run @doc exp, Julia collects the docstrings related to exp. In the previous demonstration, we collected two types of docstrings for exp(x) and exp(A::AbstractMatrix). Since each is defined within the Math v1.11 and LinearAlgebra v1.11 modules, this directory structure is created. The hashes like 77be4ada26c623c913ebbdae5d8450a4dfe8f3cbf67837faac9d7193342d2bfe and 46c0494a8a2adffc6f71752b60448da1743997b5b1791b71e3830113e9b9cc46 are hash values of the original text (stored in original.md). Do not modify original.md manually. If you are dissatisfied with the translation results, you can edit ja.md to obtain the desired translation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To change the cache directory for translation results, use the following function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"switchtranslationcachedir!(\"path/to/cache/directory\")","category":"page"},{"location":"#Target-Package-Setting","page":"Home","title":"Target Package Setting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To set the target package for translation, use the following function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"switchtargetpackage!(\"PackageName\")","category":"page"},{"location":"#How-It-Works","page":"Home","title":"How It Works","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"When the @switchlang! macro is executed, the following processes occur:\nThe target language is set\nDocs.parsedoc is overridden to insert the translation engine\nThe Documenter.Page constructor is overridden to enable translation of entire documentation pages\nDuring documentation generation:\nEach documentation string is translated\nTranslation results are cached and reused in subsequent generations","category":"page"},{"location":"#Notes","page":"Home","title":"Notes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Translation quality depends on the performance of the OpenAI API","category":"page"}]
}
